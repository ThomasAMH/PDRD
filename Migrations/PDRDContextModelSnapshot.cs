// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PDRD.Data;

#nullable disable

namespace PDRD.Migrations
{
    [DbContext(typeof(PDRDContext))]
    partial class PDRDContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PDRD.Models.Agenda", b =>
                {
                    b.Property<int>("AgendaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AgendaID"));

                    b.Property<int?>("ClosingHymnID")
                        .HasColumnType("int");

                    b.Property<int?>("ClosingPrayerPersonID")
                        .HasColumnType("int");

                    b.Property<int?>("ConductingPersonID")
                        .HasColumnType("int");

                    b.Property<int?>("IntermediateHymnID")
                        .HasColumnType("int");

                    b.Property<DateTime>("MeetingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NonSpeakerProgram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OpeningHymnID")
                        .HasColumnType("int");

                    b.Property<int?>("OpeningPrayerPersonID")
                        .HasColumnType("int");

                    b.Property<int?>("PresidingPersonID")
                        .HasColumnType("int");

                    b.Property<int?>("SacramentHymnID")
                        .HasColumnType("int");

                    b.Property<string>("SpecialMusicalNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AgendaID");

                    b.HasIndex("ClosingHymnID");

                    b.HasIndex("ClosingPrayerPersonID");

                    b.HasIndex("ConductingPersonID");

                    b.HasIndex("IntermediateHymnID");

                    b.HasIndex("OpeningHymnID");

                    b.HasIndex("OpeningPrayerPersonID");

                    b.HasIndex("PresidingPersonID");

                    b.HasIndex("SacramentHymnID");

                    b.ToTable("Agenda");
                });

            modelBuilder.Entity("PDRD.Models.Hymn", b =>
                {
                    b.Property<int>("HymnID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HymnID"));

                    b.Property<string>("HymnName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HymnNumber")
                        .HasColumnType("int");

                    b.HasKey("HymnID");

                    b.ToTable("Hymn");
                });

            modelBuilder.Entity("PDRD.Models.Person", b =>
                {
                    b.Property<int>("PersonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonID"));

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonPrefix")
                        .HasColumnType("int");

                    b.HasKey("PersonID");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("PDRD.Models.Talk", b =>
                {
                    b.Property<int>("TalkID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TalkID"));

                    b.Property<int?>("AgendaID")
                        .HasColumnType("int");

                    b.Property<int?>("PersonID")
                        .HasColumnType("int");

                    b.Property<string>("Topic")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TalkID");

                    b.HasIndex("AgendaID");

                    b.ToTable("Talks");
                });

            modelBuilder.Entity("PDRD.Models.Agenda", b =>
                {
                    b.HasOne("PDRD.Models.Hymn", "ClosingHymn")
                        .WithMany()
                        .HasForeignKey("ClosingHymnID");

                    b.HasOne("PDRD.Models.Person", "ClosingPrayerPerson")
                        .WithMany()
                        .HasForeignKey("ClosingPrayerPersonID");

                    b.HasOne("PDRD.Models.Person", "ConductingPerson")
                        .WithMany()
                        .HasForeignKey("ConductingPersonID");

                    b.HasOne("PDRD.Models.Hymn", "IntermediateHymn")
                        .WithMany()
                        .HasForeignKey("IntermediateHymnID");

                    b.HasOne("PDRD.Models.Hymn", "OpeningHymn")
                        .WithMany()
                        .HasForeignKey("OpeningHymnID");

                    b.HasOne("PDRD.Models.Person", "OpeningPrayerPerson")
                        .WithMany()
                        .HasForeignKey("OpeningPrayerPersonID");

                    b.HasOne("PDRD.Models.Person", "PresidingPerson")
                        .WithMany()
                        .HasForeignKey("PresidingPersonID");

                    b.HasOne("PDRD.Models.Hymn", "SacramentHymn")
                        .WithMany()
                        .HasForeignKey("SacramentHymnID");

                    b.Navigation("ClosingHymn");

                    b.Navigation("ClosingPrayerPerson");

                    b.Navigation("ConductingPerson");

                    b.Navigation("IntermediateHymn");

                    b.Navigation("OpeningHymn");

                    b.Navigation("OpeningPrayerPerson");

                    b.Navigation("PresidingPerson");

                    b.Navigation("SacramentHymn");
                });

            modelBuilder.Entity("PDRD.Models.Talk", b =>
                {
                    b.HasOne("PDRD.Models.Agenda", "Agenda")
                        .WithMany("Talks")
                        .HasForeignKey("AgendaID");

                    b.Navigation("Agenda");
                });

            modelBuilder.Entity("PDRD.Models.Agenda", b =>
                {
                    b.Navigation("Talks");
                });
#pragma warning restore 612, 618
        }
    }
}
